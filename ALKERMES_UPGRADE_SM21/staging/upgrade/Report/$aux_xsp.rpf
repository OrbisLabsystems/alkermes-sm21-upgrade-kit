{******************************************************************************
*
* Module Name   : $AUX_XSP.RPF
*
* Purpose       : Template created using $AUXSETUP.
*                 Cancel Sample
*
* Document Ref. : SE/T/TVGL-WORK-REPORTS/1/3
*
* Specification :
*
* Portability   : Not Checked
*
* Re-entrant    :
*
*******************************************************************************		
*		
* Modification History :		
* 		
* Version   Date         By             Description		
* -------   -----------  ----------     ---------------------------------------		
* 1.0       10-Oct-2016  F. Piccirillo  New routine alk_validation created to 
*                                       validate Audits Reviewed field		
*******************************************************************************}

JOIN LIBRARY $AUX_LIB
JOIN LIBRARY $LIB_SAMP_VALIDATE
JOIN LIBRARY $LIB_UTILS {1.0}
SET NAME "DISPLAY/"
ENABLE WINDOWS
SET NOTPROTECTED

Array prompt_text
Array table_names
Array change_stat ARRAY_SIZE (3) = " "

Array display_details ARRAY_SIZE ( 0 , 6 )
Array prompt_details ARRAY_SIZE ( 0 , 6 )


{***********************************************************************}
{                   USER INPUT BEGINS HERE                              }
{***********************************************************************}

{SECTION A - SCREEN SETUP}
{specify the header text for the command window}
{ie header_txt =  "Change Sample Status"}

    header_txt = GET_USER_MESSAGE("AUX_XSP_HEADER_TXT" ,1)

{specify footer text for the command window }

    footer_txt = GET_USER_MESSAGE("AUX_XSP_FOOTER_TXT" ,1)

{specify the text string to be displayed upon        }
{successful completion of the command                }
{ie success_txt = "Sample Status Changed"            }

  success_txt        = GET_USER_MESSAGE("AUX_XSP_SUCCESS_TXT" ,1)

{specify the text string to be displayed upon        }
{abortion from the command                           }
{ie abort_txt =   "Change Sample Status Aborted"     }

  abort_txt          = GET_USER_MESSAGE("AUX_XSP_ABORT_TXT" ,1)

{specify the sample statuses allowable within the    }
{browse list for this command if sample identity     }
{is prompted for.                                    }

{ #SUSAND 6/5/92 Bug 682 - Dont allow browse on suspended samples }

  samp_stat_allowed       =  "IUWVCH"
  job_stat_allowed        =  "AVCX"
  test_stat_allowed        =  " "


{SECTION B - INITIAL PROMPTS }


{Specify the tables that the initial prompts browse  }
{upon .                                              }

   table_names [ 1 ]    = "SAMPLE"


{  table_names [ 2 ]    = "TEST"}


{Specify the initial prompt fields and the associated}
{prompt text strings                                 }

  prompt_text [ 1 ]    =  GET_USER_MESSAGE("AUX_XSP_PROMPT_TXT" ,1)

 {prompt_text [ 2 ]    = "Enter Test Name"}


{SECTION C - DISPLAY INFORMATION}

{The user may require a header for the display area }
{Any descriptive text may be used here              }

    mess_area_one = ""


{Specify the fields which require displaying with the}
{appropriate descriptive text string                 }

{Display fields from prompt_table[1] : }

  display_details [ 1, MESSAGE_POSITION    ]   = GET_USER_MESSAGE("AUX_XSP_DISPLAY_TXT" ,1)
  display_details [ 1, TYPE_POSITION       ]   = "DISPLAY"
  display_details [ 1, TABLE_NAME_POSITION ]   = "SAMPLE"
  display_details [ 1, FIELD_NAME_POSITION ]   = "ID_TEXT"

  display_details [ 2, MESSAGE_POSITION    ]   = GET_USER_MESSAGE("AUX_XSP_DISPLAY_TXT2" ,1)
  display_details [ 2, TYPE_POSITION       ]   = "DISPLAY"
  display_details [ 2, TABLE_NAME_POSITION ]   = "SAMPLE"
  display_details [ 2, FIELD_NAME_POSITION ]   = "STATUS"

  display_details [ 3, MESSAGE_POSITION    ]   = GET_USER_MESSAGE("AUX_XSP_DISPLAY_TXT3" ,1)
  display_details [ 3, TYPE_POSITION       ]   = "DISPLAY"
  display_details [ 3, TABLE_NAME_POSITION ]   = "SAMPLE"
  display_details [ 3, FIELD_NAME_POSITION ]   = "JOB_NAME"

  display_details [ 4, MESSAGE_POSITION    ]   = GET_USER_MESSAGE("AUX_XSP_DISPLAY_TXT_4" ,1)
  display_details [ 4, TYPE_POSITION       ]   = "DISPLAY"
  display_details [ 4, TABLE_NAME_POSITION ]   = "SAMPLE"
  display_details [ 4, FIELD_NAME_POSITION ]   = "LOGIN_DATE"


{Display fields from prompt_table[2] : }

 {display_details [ 1, MESSAGE_POSITION    ]   = ""
  display_details [ 1, TYPE_POSITION       ]   = ""
  display_details [ 1, TABLE_NAME_POSITION ]   = ""
  display_details [ 1, FIELD_NAME_POSITION ]   = ""

  display_details [ 2, MESSAGE_POSITION    ]   = ""
  display_details [ 2, TYPE_POSITION       ]   = ""
  display_details [ 2, TABLE_NAME_POSITION ]   = ""
  display_details [ 2, FIELD_NAME_POSITION ]   = ""

  display_details [ 3, MESSAGE_POSITION    ]   = ""
  display_details [ 3, TYPE_POSITION       ]   = ""
  display_details [ 3, TABLE_NAME_POSITION ]   = ""
  display_details [ 3, FIELD_NAME_POSITION ]   = ""}


  {SECTION D - FIELD ASSIGNMENT                }

{  This section is divided into three areas; }
{                                            }
{         (1) Interactive Update             }
{         (2) Non-interactive Update         }
{         (3) Status Change Update           }

{----------------------------------------------------}
{  1.   I N T E R A C T I V E   U P D A T E          }
{----------------------------------------------------}

{Specify the fields which require Updating and also  }
{require a user input.Define the text string         }
{associated with the input along with the browse type}


  {Update fields associated with prompt_table[1]}
  {Interactive_browse may be filled with either }
  {the browse table_name.field or a number to   }
  {define the size of the prompted field ie "10"}
  {or if no browse required " ".                }

{The user may require a header for the prompt area. }
{ Any descriptive text may be used here.            }

mess_area_two = ""


{ prompt_details [ 1 , MESSAGE_POSITION    ]  = ""
  prompt_details [ 1 , TYPE_POSITION       ]  = ""
  prompt_details [ 1 , TABLE_NAME_POSITION ]  = ""
  prompt_details [ 1 , FIELD_NAME_POSITION ]  = ""

  prompt_details [ 2 , MESSAGE_POSITION    ]  = ""
  prompt_details [ 2 , TYPE_POSITION       ]  = ""
  prompt_details [ 2 , TABLE_NAME_POSITION ]  = ""
  prompt_details [ 2 , FIELD_NAME_POSITION ]  = ""

 }
  {Update fields associated with prompt_table[2]}
{
  prompt_details [ 1 , MESSAGE_POSITION    ]  = ""
  prompt_details [ 1 , TYPE_POSITION       ]  = ""
  prompt_details [ 1 , TABLE_NAME_POSITION ]  = ""
  prompt_details [ 1 , FIELD_NAME_POSITION ]  = ""

  prompt_details [ 2 , MESSAGE_POSITION    ]  = ""
  prompt_details [ 2 , TYPE_POSITION       ]  = ""
  prompt_details [ 2 , TABLE_NAME_POSITION ]  = ""
  prompt_details [ 2 , FIELD_NAME_POSITION ]  = ""
 }

{-----------------------------------------------------}
{   2.   S T A T U S    C H A N G E   U P D A T E     }
{-----------------------------------------------------}


{  Non interactive update of the status field        }
{  is defined within the array change_stat[n]        }
{  where n = the array element that defines the      }
{  table associated with the status in the array     }
{  prompt_table[n].                                  }
{  To update sample.status to "V" the user would     }
{  define change_stat[1] = "V" where prompt_table[1] }
{   = "SAMPLE"                                       }
{  If the status change should be back to the old    }
{  status change_stat[n] = "OLD_STATUS".             }

   change_stat[1] = "X"
{  change_stat[2] = " "
}

{*************************************************}
{             END  OF  USER  INPUT                }
{*************************************************}

aux_generator (  header_txt ,
		 footer_txt ,
	       	 mess_area_one ,
		 mess_area_two  ,
                 samp_stat_allowed ,
                 job_stat_allowed ,
                 test_stat_allowed ,
		 prompt_text       ,
		 table_names       ,
                 change_stat                  ,
                 global ( "current_library" ) ,
                 Success_txt ,
		 Abort_txt   ,
		 TRUE      ,
		 display_details ,
		 prompt_details  ,
		 "Read Transaction"  ,
		 "Write Transaction")
{**************************************************************************}
{                            Action Routine                                }
{**************************************************************************}

ROUTINE action ( VALUE first_id, VALUE second_id )

	DECLARE on_wks

	IF ( SELECT sample . on_wks ) THEN

		wks_file = "smp$worksheets:" :
		           strip ( SELECT sample . id_numeric ) :
		           ".wss"

		FILE DELETE wks_file, status

		ASSIGN sample . on_wks = FALSE

	ENDIF

	RETURN ( TRUE )

ENDROUTINE {action}

{**************************************************************************}
{                            Select Routine                                }
{**************************************************************************}

ROUTINE select_key ( VALUE line     , display_id      ,
                     VALUE first_id , VALUE second_id )

{menuprocs ...etc}

ENDROUTINE

{**************************************************************************}
{                           Validation Routine                             }
{**************************************************************************}

ROUTINE validation ( display_id )

	RETURN ( TRUE )

ENDROUTINE


{**************************************************************************}
{ Explorer Aux Report Field Action Routine -                               }
{**************************************************************************}

ROUTINE aux_xsp_explorer_user_action ( self , data )
        
	DECLARE sample_id

	sample_id = SELECT sample . id_numeric IN OBJECT data
    
	lib_samp_validate_process_parent ( sample_id )

	RETURN ( TRUE )
ENDROUTINE

{1.0}
{**************************************************************************}
{ Alkermes Validation Routine                                              }
{**************************************************************************}

ROUTINE alk_validation ( self , data )

DECLARE  
               audit_rev     

      audit_rev = data [1,10]

      IF NOT (audit_rev) THEN

            flashmessage ( "Audits Reviewed field MUST be flagged YES in order to Cancel the Sample." ,  true)

      ENDIF

RETURN ( audit_rev )

ENDROUTINE
{/1.0}

ENDROUTINE

{**************************************************************************}
{**************************************************************************}
{**************************************************************************}
