
{******************************************************************************
*
* Module Name   : WT_CHECK.RPF
*
* Purpose       : Add weight check to controlled sample
*
* Document Ref. : SE/T/TVGL-WORK-REPORTS/1/3
*
* Specification :
*
* Portability   : Not Checked
*
* Re-entrant    :
*
*******************************************************************************
*
* Modification History :
* 
* Version   Date         By             Description
* -------   -----------  ----------     ---------------------------------------
* 1.0       09-Nov-2012  Maria Allen	Release Version 
*
*
*******************************************************************************}

SET COMPILE_OPTION DECLARE

JOIN STANDARD_LIBRARY std_client
JOIN STANDARD_LIBRARY std_prompt
JOIN STANDARD_LIBRARY std_utils
JOIN STANDARD_LIBRARY std_message

JOIN LIBRARY $prompt_imprint
JOIN LIBRARY $lib_utils
JOIN LIBRARY $lib_re_interface

JOIN LIBRARY lib_new_test

SET NAME "DEFER/"

ENABLE WINDOWS

SET FORMAT "99"

main ()

EXIT

{------------------------------------------------------------------------------}

ROUTINE main

	DECLARE form, sample_id, form_active, ok 
	
	lib_re_interface_initialise ()

	IF GLOBAL ( "PARAM_ACTIVE" ) THEN

		PROMPT FOR sample_id

		IF numtext ( sample_id ) THEN
			sample_id = SELECT sample . id_numeric
			            WHERE id_numeric = packed_decimal ( sample_id )
		ELSE
			sample_id = SELECT sample . id_numeric
			            WHERE id_text = sample_id
		ENDIF

		form_active = FALSE
		form = EMPTY
		ok = ( sample_id <> EMPTY )

	ELSE
		ok = FALSE
	ENDIF

	IF NOT ok THEN

		build_form ( form )
		form_active = TRUE
		ok = get_sample_from_form ( form, sample_id )

	ENDIF

	IF ok THEN
		
			lib_new_test (sample_id, "WT_CHECK", "", "", "")

			flash_message ("Check Weight is added" , true)

	ENDIF

	IF form_active THEN
		form . end_prompt ()
	ENDIF

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE build_form ( form )

	{ Create the form that is displayed on the screen within which
	  to prompt for the sample id }

	DECLARE sample_prompt
	DECLARE display_col, separator, form_col
	DECLARE sample_static

	sample_static    = GET_USER_MESSAGE ( "WT_CHECK_DISPLAY_3" ,1 )

	{ Get the length of the longest static message }

	display_col =  LENGTH ( sample_static ) 

	IF ( GLOBAL ( "TERMTYPE" ) = "GUI" ) THEN
		separator = ""
	ELSE
		separator = " :"
	ENDIF

	sample_static    = PAD( sample_static, " ", display_col )    : separator

	display_col = display_col + LENGTH ( separator ) + 3

	CONSTANT FORM_WIDTH = 55
	form_col = ( GLOBAL( "SCREEN_WIDTH" ) -  FORM_WIDTH ) DIV 2

	PROMPT OBJECT form
		CLASS PROMPT_CLASS_FORM
		WITH  ( column        = form_col,
			row           = 10,
			height        = 4,
			width         = FORM_WIDTH,
			border        = TRUE,
			proportional  = TRUE,
			help_context = "$GENRESLIS_SCREEN",
			header 	      = GET_USER_MESSAGE(
						    "WT_CHECK_DISPLAY_1" ,1 ),
			footer 	      = GET_USER_MESSAGE (
						    "WT_CHECK_DISPLAY_2" ,1 ) )

	SET SAMPLESTATUS "CUV"

	PROMPT OBJECT sample_prompt
		ON LINE 1 FROM display_col TO form . width - 1
		BROWSE ON SAMPLE

	form . add_prompt ( sample_prompt )

	form . add_display ( sample_static,
			     2,1,
			     PROMPT_RENDITION_RAISED + PROMPT_RENDITION_BOLD )



	form . add_frame ( "",
			   1,1,
			   1,FORM_WIDTH )

	form . add_frame ( "",
			   1,3,
			   2,FORM_WIDTH )

ENDROUTINE

{------------------------------------------------------------------------------}

ROUTINE get_sample_from_form ( form, sample_id )

	form . start_prompt ()

	REPEAT

		form . wait_prompt ()

		sample_id = form . prompt_objects [ 1 ] . text

	UNTIL ( ( form . get_last_key () = "EXIT" ) OR
	        ( sample_id <> "" ) )

	RETURN ( form . get_last_key () <> "EXIT" )

ENDROUTINE


{*******************************************************************************}

