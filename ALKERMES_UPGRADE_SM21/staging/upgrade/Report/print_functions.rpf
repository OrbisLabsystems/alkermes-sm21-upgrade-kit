

{******************************************************************************
*
* Module Name          : PRINT_FUNCTIONS
*
* Purpose              : Library of routines for enumerating and manipulating
*                        printers. Provides Get Default Printer, Set Default 
*                        Printer, Enumerate Printers and a Printer Dropdown Menu
*                        for selecting an available Printer.
*     
*                        This library is restricted to use in a Windows Environment.
*                        It relies on the standard Windows Scripting Host which must
*                        at least version 5.6 on the Client Machine.
*
* Portability          : Not Checked
*
*******************************************************************************
*
* Modification History :
* 
* Version   Date         By             Description
* -------   -----------  ----------     ---------------------------------------
* 1.0       21-Apr-2005  Vincent Molloy Release Version 
*
*******************************************************************************}


SET NOTPROTECTED
SET NAME "DEFER/"
SET COMPILEOPTION DECLARE
ENABLE WINDOWS

JOIN STANDARD_LIBRARY STD_PROMPT
JOIN STANDARD_LIBRARY STD_CLIENT
JOIN STANDARD_LIBRARY STD_ARRAY
JOIN STANDARD_LIBRARY STD_OUTPUT

JOIN LIBRARY $lib_utils
JOIN LIBRARY $prompt_imprint

{ Registry Key Where Windows stores information related ot the default printer. }

CONSTANT REG_PRINTER = "HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Device"


set_the_printer  ()


GLOBAL ROUTINE get_default_printer

{
* 	Returns the name of the default printer. Does this by reading the key
*       in the Registry where the infoamtion is located and then parseing this 
*       information to retrieve the Printer Name.
*
*******************************************************************************}

    DECLARE default_printer,
            ole_shell

    CREATE OBJECT "STD_OLE_AUTOMATION", ole_shell

    ole_shell . create("WScript.Shell")

    default_printer = Ole_Shell . RegRead( REG_PRINTER )

    IF( INDEX( default_printer, "," ) != 0 )

        default_printer = LEFTSTRING( default_printer, INDEX( default_printer, "," ) -1 )

    ENDIF

    ole_shell = EMPTY
    
    RETURN (default_printer)

ENDROUTINE {get_default_printer}


GLOBAL ROUTINE set_default_printer (VALUE printer_name)

{
* 	Sets the default printer. Uses the SetDefaultPrinter method of the 
*       Windows Scripting Host wscript.network object.
*
*******************************************************************************}

    DECLARE wscript

    CREATE OBJECT "STD_OLE_AUTOMATION" , wscript

    wscript . Create("WScript.Network")
    
    wscript . setdefaultprinter(printer_name)

    wscript = EMPTY


ENDROUTINE {set_default_printers}


GLOBAL ROUTINE enumerate_printers 

{
* 	 Returns an Array containing a list of Printers.
*
*******************************************************************************}

    DECLARE wscript, 
            oPrinters, 
            counter,
            array_counter,
            printer_list,
            no_entries,
            is_odd

    ARRAY printer_list

    CREATE OBJECT "STD_OLE_AUTOMATION" , wscript

    wscript.Create("WScript.Network")
    
    oPrinters = wscript . EnumPrinterConnections()

    wscript = EMPTY

    no_entries = oPrinters.length

    counter = 0

    array_counter = 1

    is_odd = FALSE

    { The EnumPrinterConnections method of the wscript object returns a 2-Dimensional 
      array of Printer Port pairs. The Code below retieves just the printer names into 
      a printer_list array. }

    WHILE ( counter <= no_entries - 1 ) DO
 
        IF is_odd = TRUE THEN

            printer_list[array_counter, 1] = oPrinters.item(counter)
            printer_list[array_counter, 2] = array_counter

            array_counter = array_counter + 1

        ENDIF

        counter = counter + 1

        IF is_odd = TRUE THEN 
 
            is_odd = FALSE

        ELSEIF is_odd = FALSE THEN

            is_odd = TRUE

        ENDIF

    ENDWHILE


    RETURN (printer_list)

ENDROUTINE {enumerate_printers}



GLOBAL ROUTINE choose_printer

{
*    Returns the selected Printer from a dropdown list of available printers.
*
*******************************************************************************}

    DECLARE form,
            dropdown_list,
            printer_list

    printer_list = enumerate_printers()

    CREATE OBJECT PROMPT_CLASS_FORM, form

    form. header =  GET_USER_MESSAGE("PRINT_FUNCTIONS_SELECT_PRINTER",1) 
    form. footer =  GET_USER_MESSAGE("PRINT_FUNCTIONS_PRESS_DO",1) 
    form. width  = 70    
    form. height = 1
    form. column = 4
    form. row    = 6
    form. return_behaviour = FORM_RETURN_WRAP
    form . button_style = FORM_BUTTON_OK	

    PROMPT OBJECT dropdown_list
           CLASS "STD_PROMPT_TEXT_CHOOSE"
           ON LINE 1
           FROM 5 TO 100
           WITH ( choose_array =  printer_list )
  
    form . add_prompt (dropdown_list)

    form . start_prompt()
    form . wait_prompt()
    form . end_prompt()

    IF (form. get_lastkey() = "DO") 

        RETURN (STRIP(dropdown_list . text))

    ELSE

        EXIT

    ENDIF

ENDROUTINE {choose_printer}



GLOBAL ROUTINE set_the_printer 

{
*    Prompts user for a printer and sets the choice as the default printer
*    
*******************************************************************************}

    DECLARE temp_printer,
            list_of_printers 

    ARRAY list_of_printers

    temp_printer = choose_printer ()

    set_default_printer (temp_printer)

ENDROUTINE {set_the_printer}


