{==============================================================================}
{                                                                              }
{  TENSOR TECHNOLOGIES                                                         }
{                                                                              }
{  Filename          : R_MPR.RPF                                               }
{  Version           : 1.0                                                     }
{  Document Ref.     : P96378.DOC ( release 1.04 )                             }
{  Author            : John O' Gorman                                          }
{  Date Created      : 25/3/96                                                 }
{  Responsible       : TENSOR TECHNOLOGIES LIMITED                             }
{  Description       : LIMS provides the facility to provisionally             }
{                      release raw materials.                                  }
{                      Provisional Release is implemented by checking          }
{                      when all priority 1 tests are completed for a           }
{                      sample. If the priority tests are within                }
{                      specification then the Sample Authorisation Notes       }
{                      are assigned a value of  Provisional Release ,          }
{                      if the Tests are not within Specification then the      }
{                      Sample Authorisation Notes are assigned a value         }
{                      of Failed Provisional Release . The Sample              }
{                      Authorisation Notes can be included on reports and      }
{                      browses.                                                }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Passed Parameters            Value           Description                    }
{  -----------------            -----           -----------                    }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Libraries Used           Routine             Description                    }
{  --------------           -------             -----------                    }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Modification History                                                        }
{                                                                              }
{  Ver.     Date        By          Description                                }
{  ----     ----        --          -----------                                }
{  v1.0     25/03/96    JOG         Release Version                            }
{                                                                              }
{==============================================================================}

SET NOTPROTECTED
JOIN LIBRARY $AUX_LIB
JOIN LIBRARY $LIB_UTILS

JOIN LIBRARY EL_SPEC 
SET NAME "DISPLAY/"
ENABLE WINDOWS


Array prompt_text
Array table_names
Array change_stat ARRAY_SIZE (3) = " "

Array display_details ARRAY_SIZE ( 0 , 6 )
Array prompt_details ARRAY_SIZE ( 0 , 6 )


{***********************************************************************}
{                   USER INPUT BEGINS HERE                              }
{***********************************************************************}

{SECTION A - SCREEN SETUP}
{specify the header text for the command window}

    header_txt = "Provisionally Release Sample"

{specify footer text for the command window }

    footer_txt = "<SELECT> Display Results, <DO> Provisional Release, <EXIT> Quit"

{specify the text string to be displayed upon        }
{successful completion of the command                }
{ie success_txt = "Sample Status Changed"            }

  success_txt  = "  "

{specify the text string to be displayed upon        }
{abortion from the command                           }
{ie abort_txt =   "Change Sample Status Aborted"     }

  abort_txt    = "  "

{specify the sample statuses allowable within the    }
{browse list for this command if sample identity     }
{is prompted for.                                    }

  samp_stat_allowed  = "CV"
  job_stat_allowed   = "AVCX"
  test_stat_allowed  =  ""



{SECTION B - INITIAL PROMPTS }


{Specify the tables that the initial prompts browse  }
{upon .                                              }

   table_names [ 1 ]    = "SAMPLE"


{  table_names [ 2 ]    = "TEST"}


{Specify the initial prompt fields and the associated}
{prompt text strings                                 }

  prompt_text [ 1 ]    = GET_USER_MESSAGE("AUX_ASP_PROMPT_TXT" ,1)

 {prompt_text [ 2 ]    = "Enter Test Name"}


{SECTION C - DISPLAY INFORMATION}

{The user may require a header for the display area }
{Any descriptive text may be used here              }

    mess_area_one = ""


{Specify the fields which require displaying with the}
{appropriate descriptive text string                 }

{Display fields from prompt_table[1]   }

  display_details [ 1, MESSAGE_POSITION    ]   = GET_USER_MESSAGE("AUX_ASP_DISPLAY_1" ,1)
  display_details [ 1, TYPE_POSITION       ]   = "DISPLAY"
  display_details [ 1, TABLE_NAME_POSITION ]   = "SAMPLE"
  display_details [ 1, FIELD_NAME_POSITION ]   = "ID_TEXT"

  display_details [ 2, MESSAGE_POSITION    ]   = GET_USER_MESSAGE("AUX_ASP_DISPLAY_2" ,1)
  display_details [ 2, TYPE_POSITION       ]   = "DISPLAY"
  display_details [ 2, TABLE_NAME_POSITION ]   = "SAMPLE"
  display_details [ 2, FIELD_NAME_POSITION ]   = "STATUS"

{Display fields from prompt_table[2]   }

 {display_details [ 1, MESSAGE_POSITION    ]   = ""
  display_details [ 1, TYPE_POSITION       ]   = ""
  display_details [ 1, TABLE_NAME_POSITION ]   = ""
  display_details [ 1, FIELD_NAME_POSITION ]   = ""

  display_details [ 2, MESSAGE_POSITION    ]   = ""
  display_details [ 2, TYPE_POSITION       ]   = ""
  display_details [ 2, TABLE_NAME_POSITION ]   = ""
  display_details [ 2, FIELD_NAME_POSITION ]   = ""

  display_details [ 3, MESSAGE_POSITION    ]   = ""
  display_details [ 3, TYPE_POSITION       ]   = ""
  display_details [ 3, TABLE_NAME_POSITION ]   = ""
  display_details [ 3, FIELD_NAME_POSITION ]   = ""}


  {SECTION D - FIELD ASSIGNMENT                }

{  This section is divided into three areas; }
{                                            }
{         (1) Interactive Update             }
{         (2) Non-interactive Update         }
{         (3) Status Change Update           }

{----------------------------------------------------}
{  1.   I N T E R A C T I V E   U P D A T E          }
{----------------------------------------------------}

{Specify the fields which require Updating and also  }
{require a user input.Define the text string         }
{associated with the input along with the browse type}


  {Update fields associated with prompt_table[1]}
  {Interactive_browse may be filled with either }
  {the browse table_name.field or a number to   }
  {define the size of the prompted field ie "10"}
  {or if no browse required " ".                }

{The user may require a header for the prompt area. }
{ Any descriptive text may be used here.            }

  mess_area_two = ""

  {prompt_details [ 1 , MESSAGE_POSITION    ]  = GET_USER_MESSAGE (
                                                    "AUX_ASP_DISPLAY_3", 1 )
  prompt_details [ 1 , TYPE_POSITION       ]  = "FORMAT"
  prompt_details [ 1 , TABLE_NAME_POSITION ]  = "SAMPLE"
  prompt_details [ 1 , FIELD_NAME_POSITION ]  = "AUTHORISATION_NOTES"
  JOG TTL 25/03/96 }

{-----------------------------------------------------}
{   2.   S T A T U S    C H A N G E   U P D A T E     }
{-----------------------------------------------------}


{  Non interactive update of the status field        }
{  is defined within the array change_stat[n]        }
{  where n = the array element that defines the      }
{  table associated with the status in the array     }
{  prompt_table[n].                                  }
{  To update sample.status to "V" the user would     }
{  define change_stat[1] = "V" where prompt_table[1] }
{   = "SAMPLE"                                       }
{  If the status change should be back to the old    }
{  status change_stat[n] = "OLD_STATUS".             }

{ change_stat[1] = "A"                               }

{*************************************************}
{             END  OF  USER  INPUT                }
{*************************************************}

aux_generator (  header_txt ,
		 footer_txt ,
	       	 mess_area_one ,
		 mess_area_two  ,
                 samp_stat_allowed ,
                 job_stat_allowed ,
                 test_stat_allowed ,
		 prompt_text       ,
		 table_names       ,
                 change_stat                  ,
                 global ( "current_library" ) ,
	       	 Success_txt ,
		 Abort_txt   ,
		 TRUE      ,
		 display_details ,
		 prompt_details  ,
		 "Read Transaction"  ,
		 "Write Transaction" )


{==============================================================================}
{                                                                              }
{  ROUTINE action                           called from the smp authorisation  }
{                                           procedure . Allows the manual prov }
{                                           release to be called               }
{                                                                              }
{==============================================================================}
{  Modification History                                                        }
{  --------------------                                                        }
{  Date         By              Description                                    }
{  ----         --              -----------                                    }
{  25/3/96      JOG             Release Version                                }
{==============================================================================}
{                                                                              }
{  Parameters             Passed By            Description                     }
{  ----------             ---------            -----------                     }
{  first_id               VALUE                standard variable ( sample id ) }
{  second_id              VALUE                Ignore this variable ( not      }
{                                              used in sample auth procedure   }
{==============================================================================}

ROUTINE action ( VALUE first_id, VALUE second_id )

    RETURN ( prov_release_of_samp ( first_id ) )

ENDROUTINE 

{==============================================================================}
{                                                                              }
{  ROUTINE  prov_release_of_samp         Checks that priority 1 tests meet     }
{                                        there mlp specification and then      }
{                                        outputs a report on the tests status  }
{                                        Depending on the report result the    }
{                                        sample is provisionally released      }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Modification History                                                        }
{  --------------------                                                        }
{                                                                              }
{  Date         By              Description                                    }
{  ----         --              -----------                                    }
{  25/3/96      JOG             Release Version                                }
{                                                                              }
{==============================================================================}
{                                                                              }
{  Parameters             Passed By            Description                     }
{  ----------             ---------            -----------                     }
{  samp_id                VALUE                the sample id                   }
{                                                                              }
{==============================================================================}
ROUTINE prov_release_of_samp ( VALUE samp_id )

    DECLARE outcome, txt

    COMMIT                              { ================================ }
                                        { allows the selection of printers }
                                        { ================================ }

    outcome = STRIP ( result_report ( samp_id , TRUE ) )


    IF outcome = "PASS" THEN

        START WRITE TRANSACTION

        samp_id = SELECT sample . id_numeric FOR UPDATE
                  WHERE  id_numeric = samp_id 
                                        { =============================== }
                                        { restores update criteria after  }
                                        { commit                          }
                                        { =============================== }
        txt = "Provisional Release of Sample " : 
              STRIP ( samp_id ) :
              " by " : 
              STRIP ( OPERATOR ) : 
              " on " : 
              NOW

        flash_message ( "Sample Provisionally Released" , FALSE )

        ASSIGN SAMPLE . authorisation_notes = txt
        UPDATE SAMPLE 
        COMMIT

    ELSE

                                        { =============================== }
                                        { Dont modify Authorisation notes }
                                        { for Prov Rel Check Failure      }
                                        { =============================== }
        flash_message ( "Sample Failed Provisionally Released" , FALSE )

    ENDIF

    START WRITE TRANSACTION

    samp_id = SELECT SAMPLE . id_numeric FOR UPDATE
              WHERE  id_numeric = samp_id 

                                        { ============================ }
                                        { reselects the context of the }
                                        { sample                       }
                                        { ============================ }
    RETURN ( TRUE )

ENDROUTINE { prov_release_of_sample }

{==============================================================================}

{*************************************************}
{            Select Routine                       }
{*************************************************}

ROUTINE select_key  ( VALUE line     , display_id      ,
		      VALUE first_id , VALUE second_id )


set format "999"
menu_num   = MENUNUMBER ( "DSR")

MENUPROC menu_num USING first_id , "$EXIT"

ENDROUTINE

{*************************************************}
{            Validation Routine                   }
{*************************************************}

ROUTINE validation ( display_id )

RETURN ( TRUE )

ENDROUTINE

